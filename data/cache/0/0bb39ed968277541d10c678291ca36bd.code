<span class="kw1">fn</span> main<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="kw1">let</span> s <span class="sy0">=</span> String<span class="sy0">::</span><span class="me1">from</span><span class="br0">&#40;</span><span class="st0">&quot;hello&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>  <span class="co0">// s comes into scope</span>
&nbsp;
    takes_ownership<span class="br0">&#40;</span>s<span class="br0">&#41;</span><span class="sy0">;</span>             <span class="co0">// s's value moves into the function...</span>
                                    <span class="co0">// ... and so is no longer valid here</span>
&nbsp;
    <span class="kw1">let</span> x <span class="sy0">=</span> <span class="nu0">5</span><span class="sy0">;</span>                      <span class="co0">// x comes into scope</span>
&nbsp;
    makes_copy<span class="br0">&#40;</span>x<span class="br0">&#41;</span><span class="sy0">;</span>                  <span class="co0">// x would move into the function,</span>
                                    <span class="co0">// but i32 is Copy, so it's okay to still</span>
                                    <span class="co0">// use x afterward</span>
&nbsp;
<span class="br0">&#125;</span> <span class="co0">// Here, x goes out of scope, then s. But because s's value was moved, nothing</span>
  <span class="co0">// special happens.</span>
&nbsp;
<span class="kw1">fn</span> takes_ownership<span class="br0">&#40;</span>some_string<span class="sy0">:</span> String<span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="co0">// some_string comes into scope</span>
    println<span class="sy0">!</span><span class="br0">&#40;</span><span class="st0">&quot;{}&quot;</span><span class="sy0">,</span> some_string<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span> <span class="co0">// Here, some_string goes out of scope and `drop` is called. The backing</span>
  <span class="co0">// memory is freed.</span>
&nbsp;
<span class="kw1">fn</span> makes_copy<span class="br0">&#40;</span>some_integer<span class="sy0">:</span> <span class="kw3">i32</span><span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="co0">// some_integer comes into scope</span>
    println<span class="sy0">!</span><span class="br0">&#40;</span><span class="st0">&quot;{}&quot;</span><span class="sy0">,</span> some_integer<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span> <span class="co0">// Here, some_integer goes out of scope. Nothing special happens.</span>